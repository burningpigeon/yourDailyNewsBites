openapi: 3.0.0
info:
  description: This is an API for the users of yourDailyNewsBites
  version: 1.0.0
  title: yourDailyNewsBites

servers:
  - url: http://localhost:8000/api
security:
  - SessionAuth: []

tags:
  - name: Authenticator
    description: A way to authenticate users
  - name: Users
    description: Managing users
  - name: Categories
    description: Managing users categories

paths:
  /login:
    post:
      summary: Authenticate user and log them in
      tags:
        - Authenticator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successfully logged in user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No account connected 
        '500':
          description: Interal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Something serverwise went wrong

  /logout:
    post:
      summary: Log out the user
      tags:
        - Authenticator
      security:
        - SessionAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No account connected 
        '500':
          description: Interal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Something serverwise went wrong

  /register:
    post:
      summary: Register and create a new user
      tags:
        - Authenticator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        responses:
          '201':
            description: User registration successful. Verification email sent.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User registration successful. Please verify your email.
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Failed to register user

          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: No account connected 

          '500':
            description: Interal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Something serverwise went wrong
        security: []

  /verify-email:
    get:
      summary: Verify user's email using a token
      tags:
        - Authenticator
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            example: "abc123xyz"
      responses:
        '200':
          description: Email successfully verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified successfully. You can now log in.

        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired verification token
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No account connected 

        '500':
          description: Interal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Something serverwise went wrong

  /users:
    get:
    summary: Retrieve all users
    description: Get a list of all registered users
    tags:
      - Users
    security:
      - SessionAuth: []
    responses:
        '200':
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired verification token
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No account connected 

        '500':
          description: Interal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Something serverwise went wrong

  /users/{user_id}:
    get:
      summary: Retrieve details about a user
      description: Gets details about a certain user
      tags: 
        - Users
      security:
        - SessionAuth: []
      parameters:
        - name: email_in
          in: path
          required: true
          schema:
            type: string
          example: example@example.com
      responses:
        '200':
          description: Successfully retrieved user details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

    put:
      summary: Update user email or password
      description: Update a user's email and or password
      tags:
        - Users
      security:
        - SessionAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: newEmail@example.com
                password:
                  type: string
                  format: password
                  example: newStrongPassword123
                
      responses:
        '201':
          description: User updated successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User' 

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error
    
    delete:
      summary: Delete a user's acccount
      description: Removes a user's account and infomation
      tags:
        - Users
      security:
        - SessionAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: User removed successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User' 

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /categories/{user_id}:
    get:
      summary: gets all of the categories for a user
      description: gets each users categories
      tags:
        - Categories
      security:
        - SessionAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: int
          example: 1
      responses:
        '200':
          description: Successfully retrieved user details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

    post:
      summary: Adds a category
      description: Adds a category to the user's account
      tags:
        - Categories
      security:
        - SessionAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: int
          example: 1
        - name: category_id
          in: path
          required: true
          schema:
            type: int
          example: 1

      responses:
        '201':
          description: User updated successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User' 

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

    delete:
      summary: Removes a category
      description: Removes a category from a user's account
      tags:
        - Categories
      security:
        - SessionAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: int
          example: 1
        - name: category_id
          in: path
          required: true
          schema:
            type: int
          example: 1

      responses:
        '204':
          description: User successfully removed
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User' 

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad request

        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  components:
    securitySchemes:
      SessionAuth:
        type: apiKey
        in: cookie
        name: sessionId

  schemas:
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

      User:
        type: object
        required:
          - user_id
          - email
          - password_hash
          - verified
        properties:
          user_id:
            type: integer
            example: 1
          email:
            type: string
            example: example@example.com
          password_hash:
            type: string
          verified:
            type: boolean
            example: false


    Categories:
      type: object
      properties:
        category_id: 
          type: int
          example: 1
        name:
          type: string
          example: Politics
        required:
          - category_id
          - name